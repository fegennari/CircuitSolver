#ifndef  _CSGRAPHICS_H_
#define  _CSGRAPHICS_H_


// This is a copy of graphics.h and console_settings.h
// that was modified by Frank Gennari for use with Circuit Solver - 2000.
extern int  CurrentColor;

int const NUM_COLORS = 17;


#define NO_COLOR -1

// color tables
enum {NONE = 0, RED, GREEN, BLUE, YELLOW, PINK, PURPLE, BROWN, AQUA, WHITE, BLACK, DKGREY, LTBLUE, ALMOND, LTGREY, TAN, DKGREEN, ORANGE};
//    0         1    2      3     4       5     6       7      8     9      10     11      12      13      14      15   16       17


struct Point;


void  SelectConsoleWindow(void);
void  SelectDrawingWindow(void);
 
Point GetMouseLocation(void);
void  GetMouseLocation(int &x, int &y);

Point GetClick(void);
void  GetClick(int &x, int &y);
int   FoundAClick(Point *);
 
void  LineDraw(int x1, int y1, int x2, int y2);
void  RectangleDraw(int x1, int y1, int x2, int y2);
void  RectangleFrame(int x1, int y1, int x2, int y2);
void  CircleDraw(int x, int y, int rad); 
void  CircleFrame(int x, int y, int rad);
void  ArcFrame(int x, int y, int radius, int startDegrees, int NumDegrees);

void  SetDrawingColorx(int WhichColorx);
void  NumToStr(int n, char str[]);
void  DrawInt(int n);

void  ColorPixel(int color, Point p);


// floating point to integer drawing function wrappers
// eliminates many of the double->integer conversion warnings generated by some compilers
inline void MoveTo(double x, double y) {MoveTo((int)x, (int)y);};
inline void LineTo(double x, double y) {LineTo((int)x, (int)y);};
inline void LineDraw(double x1, double y1, double x2, double y2) {LineDraw((int)x1, (int)y1, (int)x2, (int)y2);};
inline void RectangleDraw(double x1, double y1, double x2, double y2) {RectangleDraw((int)x1, (int)y1, (int)x2, (int)y2);};
inline void RectangleFrame(double x1, double y1, double x2, double y2) {RectangleFrame((int)x1, (int)y1, (int)x2, (int)y2);};
inline void CircleDraw(double x, double y, int rad) {CircleDraw((int)x, (int)y, rad);}; 
inline void CircleFrame(double x, double y, int rad) {CircleFrame((int)x, (int)y, rad);};
inline void ArcFrame(double x, double y, int radius, int startDegrees, int NumDegrees) {ArcFrame((int)x, (int)y, radius, startDegrees, NumDegrees);};

#endif









